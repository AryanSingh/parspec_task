import {useState, useEffect} from "react";const useKeyPress = (targetKey: string) => {  const [keyPressed, setKeyPressed] = useState(false);  useEffect(() => {    // @ts-ignore    const downHandler = ({ key }) => {      if (key === targetKey) {        setKeyPressed(true);      }    };    // @ts-ignore    const upHandler = ({ key }) => {      if (key === targetKey) {        setKeyPressed(false);      }    };    window.addEventListener('keydown', downHandler);    window.addEventListener('keyup', upHandler);    return () => {      window.removeEventListener('keydown', downHandler);      window.removeEventListener('keyup', upHandler);    };  }, [targetKey]);  return keyPressed;};export default useKeyPress;